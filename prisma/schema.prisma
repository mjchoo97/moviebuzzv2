// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Movie{
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  moviename       String
  movieslug       String   @unique
  createdAt       DateTime @default(now())
  description     String?
  year            Int
  score           Float
  poster          String?
  createdUserId   String
  rating          Rating[] @relation("MovieRatings")
}

model Rating{
    id            String @id @default(auto()) @map("_id") @db.ObjectId
    movieId       String 
    movie         Movie  @relation("MovieRatings",fields: [movieId], references: [id])
    rating        Float 
    userId        String
    user          User @relation("UserRatings",fields: [userId], references: [id])
    createdAt     DateTime @default(now())
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId 
  email     String
  sessions  Session[]
  account   Account? @relation("GoogleAccount")  
  rating    Rating[] @relation("UserRatings")
}

model Session {
  id        String   @id @default(uuid()) @map("_id") 
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}


model Account {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  googleId  String
  userId    String  @unique
  user      User     @relation("GoogleAccount",fields: [userId], references: [id]) // Ensuring fields & references are in correct order
  name      String
  image     String
}
